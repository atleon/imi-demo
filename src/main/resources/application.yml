# Variables used for substitution in following config blocks, which can also be overridden in order
# to run against embedded resources and/or in integration testing
vars:
  kafka:
    bootstrap.servers: localhost:9092
  aws:
    region: us-east-1
    credentials.provider.type: static
    credentials.access.key.id: test
    credentials.secret.access.key: test
  sqs:
    endpoint.override: http://localhost:32831

# Atleon-specific Spring resource variables
atleon:
  management:
    # Configuration for REST-based management
    rest:
      enabled: true
  config.sources:
    # Example Kafka Config Source - Configurable with all properties supported by native client
    # library, including properties from org.apache.kafka.clients.CommonClientConfigs,
    # org.apache.kafka.clients.producer.ProducerConfig, and
    # org.apache.kafka.clients.consumer.ConsumerConfig.
    - type: kafka
      name: kafkaConfigSource
      bootstrap.servers: ${vars.kafka.bootstrap.servers}
    # Example SQS Config Source - Configurable with all properties supported by low level clients,
    # including those from io.atleon.aws.util.AwsConfig and io.atleon.aws.sqs.SqsConfig
    - type: sqs
      name: sqsConfigSource
      aws.region: ${vars.aws.region}
      aws.credentials.provider.type: ${vars.aws.credentials.provider.type}
      aws.credentials.access.key.id: ${vars.aws.credentials.access.key.id}
      aws.credentials.secret.access.key: ${vars.aws.credentials.secret.access.key}
      sqs.endpoint.override: ${vars.sqs.endpoint.override} # Usually only necessary for local runs

# Stream-specific configuration variables
# Stream-specific configuration variables
stream:
  kafka:
    hiring.intent.event.topic: hiring-intents
  sqs:
    company.event.queue.name: company-events
  imi:
    command.topic: commands
    materialization.topic: views